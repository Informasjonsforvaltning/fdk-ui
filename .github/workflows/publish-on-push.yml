name: Publish to npm on push to main

on:
  push:
    branches:
      - main

jobs:
  release:
    if: github.actor != 'fdk-bot'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Enable Corepack (Yarn 4)
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Install Playwright browsers
        run: yarn playwright install --with-deps

      - name: Run tests
        run: |
          if yarn run -T test -v >/dev/null 2>&1; then
            yarn test --run
          else
            echo "No tests configured, skipping"
          fi

      - name: Build package
        run: yarn build

      - name: Configure git user
        run: |
          git config user.name "fdk-bot"
          git config user.email "fdk-bot@users.noreply.github.com"

      - name: Bump version (patch) and create tag
        run: |
          # Ensure we have all remote tags so we don't accidentally recreate an existing one
          git fetch --tags --force
          # Read the current version from package.json
          current_version=$(node -p "require('./package.json').version")
          # Parse semantic version: major.minor.patch
          IFS='.' read -r major minor patch <<< "$current_version"
          # Propose next patch version (we will skip forward if that tag exists)
          next_version="$major.$minor.$((patch + 1))"
          # If a tag for the proposed version already exists, keep incrementing the patch
          while git rev-parse -q --verify "refs/tags/v$next_version" >/dev/null; do
            patch=$((patch + 1))
            next_version="$major.$minor.$patch"
          done
          # Update package.json version only (avoid npm auto-tagging to prevent collisions)
          npm version "$next_version" --no-git-tag-version
          # Commit the version bump so the change is recorded
          git commit -am "ci: release $next_version"
          # Create an annotated tag for the new version
          git tag -a "v$next_version" -m "ci: release $next_version"

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_BOT_TOKEN }}
        run: |
          if npm publish --access public; then
            echo "✅ Package published successfully"
          else
            # If publish fails, delete the tag that matches the current package.json version
            # to avoid leaving a dangling release tag without a published package
            echo "❌ npm publish failed, rolling back git tag"
            git tag -d "v$(node -p "require('./package.json').version")"
            exit 1
          fi

      - name: Push changes and tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Push both the commit and any tags created above
          if git push origin HEAD:main --follow-tags; then
            echo "✅ Changes and tags pushed successfully"
          else
            echo "❌ Failed to push changes to repository"
            exit 1
          fi
